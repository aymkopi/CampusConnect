package campusconnect;

import javax.swing.*;
import java.awt.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import javax.swing.border.LineBorder;

public class SignUpPage extends JFrame {

    //establish connection
    public static Connection conn() {
        try {
            String url = "jdbc:mysql://localhost:3306/campusconnect?zeroDateTimeBehavior=CONVERT_TO_NULL";
            String user = "justi";
            String password = "1234";
            Class.forName("com.mysql.cj.jdbc.Driver");
            return DriverManager.getConnection(url, user, password);
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return null;
    }

    //variables
    Connection conn = conn();
    String fullName;
    String email;
    String userID;
    String password;
    String userType;
 


    //creates new SignUpPage
    public SignUpPage() {
        initComponents();
        getContentPane().setBackground(Color.WHITE);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        accountPanel = new javax.swing.JPanel();
        signUpPanel = new javax.swing.JPanel();
        lblCreateAccount = new javax.swing.JLabel();
        lblAlreadyHaveAccount = new javax.swing.JLabel();
        loginRedirectButton = new javax.swing.JButton();
        inFirstNameSignUp = new test.TextFieldRound();
        inLastNameSignUp = new test.TextFieldRound();
        inEmailSignUp = new test.TextFieldRound();
        inStudentIDSignUp = new test.TextFieldRound();
        inPasswordSignUp = new test.PasswordRound();
        inConfirmPasswordSignUp = new test.PasswordRound();
        showSignUpPassword = new javax.swing.JCheckBox();
        createAccountButton = new test.ButtonRound();
        LogInPanel = new javax.swing.JPanel();
        lblWelcomeBack = new javax.swing.JLabel();
        lblAlreadyHaveAccount1 = new javax.swing.JLabel();
        signUpRedirectButton = new javax.swing.JButton();
        inStudentIDLogin = new test.TextFieldRound();
        inPasswordLogin = new test.PasswordRound();
        showLoginPassword = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        loginButton = new test.ButtonRound();
        inUserType = new test.ComboBoxRound();
        imagePlaceHolder = new test.ButtonRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("loginPage");
        setBackground(new java.awt.Color(204, 255, 204));
        setFont(new java.awt.Font("Helvetica", 0, 10)); // NOI18N
        setName("mainPage"); // NOI18N

        accountPanel.setBackground(new java.awt.Color(204, 204, 204));
        accountPanel.setPreferredSize(new java.awt.Dimension(460, 496));
        accountPanel.setLayout(new java.awt.CardLayout());

        signUpPanel.setPreferredSize(new java.awt.Dimension(463, 495));

        lblCreateAccount.setFont(new java.awt.Font("Inter ExtraBold", 0, 36)); // NOI18N
        lblCreateAccount.setText("Create an account");

        lblAlreadyHaveAccount.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N
        lblAlreadyHaveAccount.setText("Already have an account? ");

        loginRedirectButton.setFont(new java.awt.Font("Inter", 0, 13)); // NOI18N
        loginRedirectButton.setForeground(new java.awt.Color(0, 0, 238));
        loginRedirectButton.setText("Log in");
        loginRedirectButton.setBorder(null);
        loginRedirectButton.setOpaque(false);
        loginRedirectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginRedirectButtonActionPerformed(evt);
            }
        });

        inFirstNameSignUp.setBorder(null);
        inFirstNameSignUp.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        inFirstNameSignUp.setMargin(new java.awt.Insets(2, 12, 2, 6));
        inFirstNameSignUp.setName(""); // NOI18N
        inFirstNameSignUp.setPlaceHolder("First Name");
        inFirstNameSignUp.setRoundBottomLeft(8);
        inFirstNameSignUp.setRoundBottomRight(8);
        inFirstNameSignUp.setRoundTopLeft(8);
        inFirstNameSignUp.setRoundTopRight(8);

        inLastNameSignUp.setBorder(null);
        inLastNameSignUp.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        inLastNameSignUp.setPlaceHolder("Last Name");
        inLastNameSignUp.setRoundBottomLeft(8);
        inLastNameSignUp.setRoundBottomRight(8);
        inLastNameSignUp.setRoundTopLeft(8);
        inLastNameSignUp.setRoundTopRight(8);

        inEmailSignUp.setBorder(null);
        inEmailSignUp.setToolTipText("");
        inEmailSignUp.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        inEmailSignUp.setPlaceHolder("STI Email Account");
        inEmailSignUp.setRoundBottomLeft(8);
        inEmailSignUp.setRoundBottomRight(8);
        inEmailSignUp.setRoundTopLeft(8);
        inEmailSignUp.setRoundTopRight(8);

        inStudentIDSignUp.setBorder(null);
        inStudentIDSignUp.setToolTipText("");
        inStudentIDSignUp.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        inStudentIDSignUp.setPlaceHolder("Student ID");
        inStudentIDSignUp.setRoundBottomLeft(8);
        inStudentIDSignUp.setRoundBottomRight(8);
        inStudentIDSignUp.setRoundTopLeft(8);
        inStudentIDSignUp.setRoundTopRight(8);

        inPasswordSignUp.setBorder(null);
        inPasswordSignUp.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        inPasswordSignUp.setPlaceHolder("Password");
        inPasswordSignUp.setRoundBottomLeft(8);
        inPasswordSignUp.setRoundBottomRight(8);
        inPasswordSignUp.setRoundTopLeft(8);
        inPasswordSignUp.setRoundTopRight(8);

        inConfirmPasswordSignUp.setBorder(null);
        inConfirmPasswordSignUp.setFont(new java.awt.Font("Inter", 0, 12)); // NOI18N
        inConfirmPasswordSignUp.setPlaceHolder("Confirm Password");
        inConfirmPasswordSignUp.setRoundBottomLeft(8);
        inConfirmPasswordSignUp.setRoundBottomRight(8);
        inConfirmPasswordSignUp.setRoundTopLeft(8);
        inConfirmPasswordSignUp.setRoundTopRight(8);

        showSignUpPassword.setFont(new java.awt.Font("Inter", 0, 10)); // NOI18N
        showSignUpPassword.setText("Show Password");
        showSignUpPassword.setAlignmentX(0.5F);
        showSignUpPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        showSignUpPassword.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        showSignUpPassword.setMargin(new java.awt.Insets(2, 2, 2, 0));
        showSignUpPassword.setOpaque(false);
        showSignUpPassword.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        showSignUpPassword.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        showSignUpPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showSignUpPasswordActionPerformed(evt);
            }
        });

        createAccountButton.setBackground(new java.awt.Color(153, 153, 255));
        createAccountButton.setBorder(null);
        createAccountButton.setText("Create Account");
        createAccountButton.setFont(new java.awt.Font("Inter SemiBold", 0, 12)); // NOI18N
        createAccountButton.setPreferredSize(new java.awt.Dimension(86, 16));
        createAccountButton.setRoundBottomLeft(8);
        createAccountButton.setRoundBottomRight(8);
        createAccountButton.setRoundTopLeft(8);
        createAccountButton.setRoundTopRight(8);
        createAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout signUpPanelLayout = new javax.swing.GroupLayout(signUpPanel);
        signUpPanel.setLayout(signUpPanelLayout);
        signUpPanelLayout.setHorizontalGroup(
            signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signUpPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCreateAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(signUpPanelLayout.createSequentialGroup()
                            .addComponent(inEmailSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(inStudentIDSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inConfirmPasswordSignUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inPasswordSignUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(signUpPanelLayout.createSequentialGroup()
                                .addComponent(inFirstNameSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(inLastNameSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(signUpPanelLayout.createSequentialGroup()
                                .addComponent(lblAlreadyHaveAccount)
                                .addGap(0, 0, 0)
                                .addComponent(loginRedirectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(createAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(showSignUpPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        signUpPanelLayout.setVerticalGroup(
            signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signUpPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(lblCreateAccount)
                .addGap(10, 10, 10)
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlreadyHaveAccount)
                    .addComponent(loginRedirectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inFirstNameSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inLastNameSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(signUpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inStudentIDSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inEmailSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(inPasswordSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inConfirmPasswordSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showSignUpPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(createAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        accountPanel.add(signUpPanel, "card2");

        LogInPanel.setPreferredSize(new java.awt.Dimension(463, 496));

        lblWelcomeBack.setFont(new java.awt.Font("Helvetica", 1, 36)); // NOI18N
        lblWelcomeBack.setText("Welcome back!");

        lblAlreadyHaveAccount1.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        lblAlreadyHaveAccount1.setText("Don't have an account? ");

        signUpRedirectButton.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        signUpRedirectButton.setForeground(new java.awt.Color(0, 0, 238));
        signUpRedirectButton.setText("Sign Up");
        signUpRedirectButton.setBorder(null);
        signUpRedirectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpRedirectButtonActionPerformed(evt);
            }
        });

        inStudentIDLogin.setBorder(null);
        inStudentIDLogin.setToolTipText("");
        inStudentIDLogin.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        inStudentIDLogin.setPlaceHolder("User ID");
        inStudentIDLogin.setRoundBottomLeft(8);
        inStudentIDLogin.setRoundBottomRight(8);
        inStudentIDLogin.setRoundTopLeft(8);
        inStudentIDLogin.setRoundTopRight(8);

        inPasswordLogin.setBorder(null);
        inPasswordLogin.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        inPasswordLogin.setPlaceHolder("Password");
        inPasswordLogin.setRoundBottomLeft(8);
        inPasswordLogin.setRoundBottomRight(8);
        inPasswordLogin.setRoundTopLeft(8);
        inPasswordLogin.setRoundTopRight(8);
        inPasswordLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inPasswordLoginActionPerformed(evt);
            }
        });

        showLoginPassword.setFont(new java.awt.Font("Helvetica", 0, 10)); // NOI18N
        showLoginPassword.setText("Show Password");
        showLoginPassword.setAlignmentX(0.5F);
        showLoginPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        showLoginPassword.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        showLoginPassword.setMargin(new java.awt.Insets(2, 2, 2, 0));
        showLoginPassword.setOpaque(false);
        showLoginPassword.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        showLoginPassword.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        showLoginPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showLoginPasswordActionPerformed(evt);
            }
        });

        loginButton.setBackground(new java.awt.Color(153, 153, 255));
        loginButton.setBorder(null);
        loginButton.setText("Log In");
        loginButton.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        loginButton.setPreferredSize(new java.awt.Dimension(86, 16));
        loginButton.setRoundBottomLeft(8);
        loginButton.setRoundBottomRight(8);
        loginButton.setRoundTopLeft(8);
        loginButton.setRoundTopRight(8);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        inUserType.setBorder(null);
        inUserType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Student", "Faculty", "Admin" }));
        inUserType.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        inUserType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inUserTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LogInPanelLayout = new javax.swing.GroupLayout(LogInPanel);
        LogInPanel.setLayout(LogInPanelLayout);
        LogInPanelLayout.setHorizontalGroup(
            LogInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LogInPanelLayout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(LogInPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(LogInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LogInPanelLayout.createSequentialGroup()
                        .addComponent(lblAlreadyHaveAccount1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(signUpRedirectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(234, 234, 234))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogInPanelLayout.createSequentialGroup()
                        .addGroup(LogInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblWelcomeBack, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, LogInPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(LogInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(LogInPanelLayout.createSequentialGroup()
                                        .addComponent(inStudentIDLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(inUserType, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(showLoginPassword)
                                    .addComponent(inPasswordLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(loginButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(57, 57, 57))))
        );
        LogInPanelLayout.setVerticalGroup(
            LogInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogInPanelLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(lblWelcomeBack)
                .addGap(10, 10, 10)
                .addGroup(LogInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAlreadyHaveAccount1)
                    .addComponent(signUpRedirectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(94, 94, 94)
                .addGroup(LogInPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inUserType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inStudentIDLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addComponent(inPasswordLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showLoginPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        accountPanel.add(LogInPanel, "card3");

        imagePlaceHolder.setBorder(null);
        imagePlaceHolder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bird-thumbnail.jpg"))); // NOI18N
        imagePlaceHolder.setBorderPainted(false);
        imagePlaceHolder.setFocusPainted(false);
        imagePlaceHolder.setFocusable(false);
        imagePlaceHolder.setRoundBottomLeft(20);
        imagePlaceHolder.setRoundBottomRight(20);
        imagePlaceHolder.setRoundTopLeft(20);
        imagePlaceHolder.setRoundTopRight(20);
        imagePlaceHolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imagePlaceHolderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(imagePlaceHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 367, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(accountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imagePlaceHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(accountPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginRedirectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginRedirectButtonActionPerformed
        //show login panel
        LogInPanel.setVisible(true);
        signUpPanel.setVisible(false);

    }//GEN-LAST:event_loginRedirectButtonActionPerformed

    private void createAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountButtonActionPerformed
        if (validateInputs()) {
            //database data insertion
            if (conn != null) {
                try {
                    Statement st = conn.createStatement();
                    String checkUserExist = "SELECT * FROM users WHERE user_id = '" + userID + "'";
                    var rs = st.executeQuery(checkUserExist);

                    if (rs.next()) {  // If a matching student ID is found
                        JOptionPane.showMessageDialog(this, "Account with this User ID already exists.");
                        return;  // Exit the method to avoid duplicate insertion
                    }

                    // Insert new user into database
                    String signUpQuery = "INSERT INTO users (full_name, email, user_id, password) "
                            + "VALUES ('" + fullName + "', '" + email + "', '" + userID + "', '" + password + "')";
                    st.executeUpdate(signUpQuery);
                    JOptionPane.showMessageDialog(this, "Account created successfully!");
                    inFirstNameSignUp.setText("");
                    inLastNameSignUp.setText("");
                    inEmailSignUp.setText("");
                    inStudentIDSignUp.setText("");
                    inPasswordSignUp.setText("");
                    inConfirmPasswordSignUp.setText("");
                    
                    signUpPanel.setVisible(false);
                    LogInPanel.setVisible(true);

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                }
            }
        }
    }

    //checks if all fields met conditions; return boolean
    private boolean validateInputs() {
        boolean isValid = true;

        if (inFirstNameSignUp.getText().isEmpty()) {
            inFirstNameSignUp.setBorder(new LineBorder(Color.red, 1));
            isValid = false;
        } else {
            inFirstNameSignUp.setBorder(null);
        }

        if (inLastNameSignUp.getText().isEmpty()) {
            inLastNameSignUp.setBorder(new LineBorder(Color.red, 1));
            isValid = false;
        } else {
            inLastNameSignUp.setBorder(null);
            fullName = inFirstNameSignUp.getText() + " " + inLastNameSignUp.getText();
        }

        if (inEmailSignUp.getText().isEmpty()) {
            inEmailSignUp.setBorder(new LineBorder(Color.red, 1));
            isValid = false;
        } else {
            inEmailSignUp.setBorder(null);
            email = inEmailSignUp.getText();
        }

        if (inStudentIDSignUp.getText().isEmpty() || inStudentIDSignUp.getText().length() != 11) {
            inStudentIDSignUp.setBorder(new LineBorder(Color.red, 1));
            isValid = false;

        } else {
            inStudentIDSignUp.setBorder(null);
            userID = inStudentIDSignUp.getText();
        }

        if (inPasswordSignUp.getText().isEmpty()) {
            inPasswordSignUp.setBorder(new LineBorder(Color.red, 1));
            isValid = false;
        } else {
            inPasswordSignUp.setBorder(null);
        }

        if (inConfirmPasswordSignUp.getText().isEmpty() || !Arrays.equals(inPasswordSignUp.getPassword(), inConfirmPasswordSignUp.getPassword())) {
            inConfirmPasswordSignUp.setBorder(new LineBorder(Color.red, 1));
            isValid = false;
        } else {
            inConfirmPasswordSignUp.setBorder(null);
            password = new String(inConfirmPasswordSignUp.getPassword());
        }

        return isValid;
    }//GEN-LAST:event_createAccountButtonActionPerformed

    private void showSignUpPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showSignUpPasswordActionPerformed
        //mask and unmask password
        if (showSignUpPassword.isSelected()) {
            inPasswordSignUp.setEchoChar((char) 0);
            inConfirmPasswordSignUp.setEchoChar((char) 0);
        } else {
            inPasswordSignUp.setEchoChar('\u25cf');
            inConfirmPasswordSignUp.setEchoChar('\u25cf');
        }
    }//GEN-LAST:event_showSignUpPasswordActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        if (userVerify()) {
            //database insertion
            if (conn != null) {
                try {
                    Statement st = conn.createStatement();
                    String checkUserExist = "SELECT * FROM users WHERE user_id = '" + userID + "' AND password = '" + password + "'";
                    var rs = st.executeQuery(checkUserExist);

                    if (rs.next()) {  // If a matching student ID is found
                        JOptionPane.showMessageDialog(this, "Login Successful!");
                        //launch interface based on userType
                        if ((inUserType.getSelectedItem().toString()).equals("Student")) {
                            java.awt.EventQueue.invokeLater(new Runnable() {
                                public void run() {
                                    new CampusConnect().setVisible(true);
                                }
                            });
                        } else if ((inUserType.getSelectedItem().toString()).equals("Faculty")) {
                            
                            java.awt.EventQueue.invokeLater(new Runnable() {
                                public void run() {
                                    new CampusConnect().setVisible(true);
                                }
                            });
                        } else {
                            inStudentIDLogin.setPlaceHolder("Admin ID");
                            java.awt.EventQueue.invokeLater(new Runnable() {
                                public void run() {
                                    new CampusConnect().setVisible(true);
                                }
                            });
                        }
                        dispose();
                    } else {
                        JOptionPane.showMessageDialog(this, "Invalid User ID or Password. Please try again.");
                    }
                    inStudentIDLogin.setBorder(new LineBorder(Color.RED, 1));
                    inPasswordLogin.setBorder(new LineBorder(Color.RED, 1));

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                }
            }
        }
    }

    //condition if userlogin fields are empty or not
    private boolean userVerify() {
        boolean isValid = true;

        if (inStudentIDLogin.getText().isEmpty() || inStudentIDLogin.getText().length() != 11) {
            inStudentIDLogin.setBorder(new LineBorder(Color.red, 1));
            isValid = false;

        } else {
            inStudentIDLogin.setBorder(null);
            userID = inStudentIDLogin.getText();
        }

        if (inPasswordLogin.getText().isEmpty()) {
            inPasswordLogin.setBorder(new LineBorder(Color.red, 1));
            isValid = false;
        } else {
            inPasswordLogin.setBorder(null);
            password = new String(inPasswordLogin.getPassword());
        }

        return isValid;

    }//GEN-LAST:event_loginButtonActionPerformed

    private void showLoginPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showLoginPasswordActionPerformed
        //mask and unmask login password
        if (showLoginPassword.isSelected()) {
            inPasswordLogin.setEchoChar((char) 0);

        } else {
            inPasswordLogin.setEchoChar('\u25cf');

        }
    }//GEN-LAST:event_showLoginPasswordActionPerformed

    private void signUpRedirectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpRedirectButtonActionPerformed
        //show signUp panel        
        signUpPanel.setVisible(true);
        LogInPanel.setVisible(false);
    }//GEN-LAST:event_signUpRedirectButtonActionPerformed

    private void inPasswordLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inPasswordLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inPasswordLoginActionPerformed

    private void inUserTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inUserTypeActionPerformed
        if ((inUserType.getSelectedItem().toString()).equals("Student")) {
            inStudentIDLogin.setPlaceHolder("Student ID");
        } else if ((inUserType.getSelectedItem().toString()).equals("Faculty")) {
            inStudentIDLogin.setPlaceHolder("Faculty ID");
        } else {
            inStudentIDLogin.setPlaceHolder("Admin ID");
            
        }
        inStudentIDLogin.update(inStudentIDLogin.getGraphics());
    }//GEN-LAST:event_inUserTypeActionPerformed

    private void imagePlaceHolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imagePlaceHolderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imagePlaceHolderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());

                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUpPage().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LogInPanel;
    private javax.swing.JPanel accountPanel;
    private test.ButtonRound createAccountButton;
    private test.ButtonRound imagePlaceHolder;
    private test.PasswordRound inConfirmPasswordSignUp;
    private test.TextFieldRound inEmailSignUp;
    private test.TextFieldRound inFirstNameSignUp;
    private test.TextFieldRound inLastNameSignUp;
    private test.PasswordRound inPasswordLogin;
    private test.PasswordRound inPasswordSignUp;
    private test.TextFieldRound inStudentIDLogin;
    private test.TextFieldRound inStudentIDSignUp;
    private test.ComboBoxRound inUserType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAlreadyHaveAccount;
    private javax.swing.JLabel lblAlreadyHaveAccount1;
    private javax.swing.JLabel lblCreateAccount;
    private javax.swing.JLabel lblWelcomeBack;
    private test.ButtonRound loginButton;
    private javax.swing.JButton loginRedirectButton;
    private javax.swing.JCheckBox showLoginPassword;
    private javax.swing.JCheckBox showSignUpPassword;
    private javax.swing.JPanel signUpPanel;
    private javax.swing.JButton signUpRedirectButton;
    // End of variables declaration//GEN-END:variables
}
